2. Test Automation Framework Setup:-

1. Create a New Java Project:
In Eclipse IDE, create a new Java project. For example, in Eclipse, you can go to File > New > Java Project.

2. Add Selenium WebDriver and TestNG Dependencies:
Add the necessary dependencies to the project. If you are using Maven, you can add the following dependencies to your pom.xml file:

â€‚<dependencies>
    <!-- Selenium WebDriver -->
    <dependency>
        <groupId>org.seleniumhq.selenium</groupId>
        <artifactId>selenium-java</artifactId>
        <version>3.141.59</version>
    </dependency>

    <!-- TestNG -->
    <dependency>
        <groupId>org.testng</groupId>
        <artifactId>testng</artifactId>
        <version>7.4.0</version>
    </dependency>
</dependencies>

If not using Maven, download the Selenium WebDriver and TestNG libraries and add them to your project manually.

3. Create a Basic Test Case:
Create a new Java class for the test case.

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

public class SampleTest {

    private WebDriver driver;

    @BeforeMethod
    public void setup() {
        System.setProperty("webdriver.chrome.driver", "path/to/chromedriver");
        driver = new ChromeDriver();
    }

    @Test
    public void sampleTest() {
        // Navigate to the application
        driver.get("https://www.example.com");

        // Perform actions and assertions
        // Example: Check the page title
        String pageTitle = driver.getTitle();
        System.out.println("Page Title: " + pageTitle);
        // Add more test steps as needed
    }

    @AfterMethod
    public void tearDown() {
        if (driver != null) {
            driver.quit();
        }
    }
}

4. Run the Test Case:
Run the test case by right-clicking on the class and selecting Run As > TestNG Test (in Eclipse) or using the relevant option in Eclipse IDE.

5. View Test Results:
TestNG will execute the test case, and can view the results in the console or the TestNG Results tab in Eclipse IDE.
